{"version":3,"sources":["Alert.module.css","List.jsx","Alert.jsx","App.js","reportWebVitals.js","index.js","List.module.css","App.module.css"],"names":["module","exports","List","children","editItem","removeItem","id","item","className","ListStyle","listDivision","Text","buttons","Button","variant","edit","onClick","delete","Alert","type","message","removeNotification","list","useEffect","timeout","setTimeout","clearTimeout","AlertStyle","alertPara","style","backgroundColor","SpanStyle","App","useState","itemEdit","idSetter","buttonType","buttonTypehandler","localStorage","getItem","JSON","parse","addToList","editing","setEditItem","show","notification","notificationSetter","clickHandler","e","preventDefault","map","ITEM","showNotification","newItem","Date","getTime","toString","itemAfterEdit","find","filter","setItem","stringify","AppStyles","Background","listSection","header","MainSection","onSubmit","placeholder","value","onChange","text","target","as","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.985f95de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertPara\":\"Alert_alertPara__30yvd\",\"SpanStyle\":\"Alert_SpanStyle__3PdX1\"};","import ListStyle from \"./List.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\n\r\nconst List = ({ children, editItem, removeItem }) => {\r\n  const { id, item } = children;\r\n\r\n  return (\r\n    <div className={ListStyle.listDivision}>\r\n      <div className={ListStyle.Text}>{item}</div>\r\n      <div className={ListStyle.buttons}>\r\n        <Button\r\n          variant=\"outline-dark\"\r\n          className={ListStyle.edit}\r\n          onClick={() => editItem(id)}\r\n        >\r\n          <AiFillEdit />\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-dark\"\r\n          className={ListStyle.delete}\r\n          onClick={() => removeItem(id)}\r\n        >\r\n          <MdDeleteForever />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import AlertStyle from \"./Alert.module.css\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst Alert = ({ type, message, removeNotification, list }) => {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => removeNotification(), 3000);\r\n    return () => clearTimeout(timeout);\r\n  }, [list]);\r\n  return (\r\n    <p\r\n      className={AlertStyle.alertPara}\r\n      style={\r\n        type === \"danger\"\r\n          ? { backgroundColor: \"#ff5757\" }\r\n          : { backgroundColor: \"rgba(60, 240, 63, 1)\" }\r\n      }\r\n    >\r\n      <span className={AlertStyle.SpanStyle}>{message}</span>\r\n    </p>\r\n  );\r\n  // return <p className={`${AlertStyle.p} ${AlertStyle}.${type}}`}>{message}</p>;\r\n};\r\n\r\nexport default Alert;\r\n","// import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport AppStyles from \"./App.module.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem(\"list\")));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [item, itemEdit] = useState(\"\");\n  const [id, idSetter] = useState(null);\n  const [buttonType, buttonTypehandler] = useState(\"submit\");\n  const [list, addToList] = useState(getLocalStorage());\n  const [editing, setEditItem] = useState(false);\n  const [notification, notificationSetter] = useState({\n    show: false,\n    type: \"\",\n    message: \"\",\n  });\n\n  const clickHandler = (e) => {\n    e.preventDefault();\n    if (!item) showNotification(true, \"danger\", \"Please enter an Item\");\n    else if (editing) {\n      addToList(\n        list.map((ITEM) => (ITEM.id === id ? { ...ITEM, item: item } : ITEM))\n      );\n      buttonTypehandler(\"submit\");\n      itemEdit(\"\");\n      setEditItem(false);\n      idSetter(null);\n      showNotification(true, \"success\", \"Item Edited in the List\");\n    } //\n    else if (item) {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        item: item,\n      };\n      addToList([...list, newItem]);\n      itemEdit(\"\");\n\n      showNotification(true, \"success\", \"Item added to the list\");\n    }\n  };\n\n  const showNotification = (show = false, type = \"\", message = \"\") => {\n    notificationSetter({ show, type, message });\n  };\n\n  const editItem = (id) => {\n    const itemAfterEdit = list.find((ITEM) => ITEM.id === id);\n    setEditItem(true);\n    idSetter(id);\n    itemEdit(itemAfterEdit.item);\n    buttonTypehandler(\"Edit\");\n  };\n\n  const removeItem = (id) => {\n    addToList(list.filter((item) => item.id !== id));\n    showNotification(true, \"success\", \"Item Deleted\");\n  };\n\n  const clearAllButtonHandler = () => {\n    addToList([]);\n    showNotification(true, \"success\", \"List Cleared\");\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  return (\n    <div className={AppStyles.Background}>\n      <div className={AppStyles.listSection}>\n        <header className={AppStyles.header}>Grocery Bud</header>\n        {notification.show && (\n          <Alert\n            key=\"Alert-section\"\n            {...notification}\n            removeNotification={showNotification}\n            list={list}\n          />\n        )}\n        <span className=\"AppStyles\"></span>\n        <form className={AppStyles.MainSection} onSubmit={clickHandler}>\n          <input\n            type=\"text\"\n            className=\"text\"\n            placeholder=\"Add an item...\"\n            value={item}\n            onChange={(text) => itemEdit(text.target.value)}\n          />\n          <Button\n            as=\"input\"\n            type=\"submit\"\n            value={buttonType}\n            onClick={clickHandler}\n          />\n        </form>\n        {list.length > 0 && (\n          <div className=\"AppStyles.ListItems\">\n            {list.map((ITEM) => (\n              <List key={ITEM.id} editItem={editItem} removeItem={removeItem}>\n                {ITEM}\n              </List>\n            ))}\n\n            <Button\n              type=\"outilne-submit\"\n              variant=\"outline-dark\"\n              onClick={clearAllButtonHandler}\n            >\n              Clear All\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listDivision\":\"List_listDivision__2LcpK\",\"Text\":\"List_Text__2LbjK\",\"buttons\":\"List_buttons__3SESs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"App_Background__1O11a\",\"header\":\"App_header__3r_-t\",\"listSection\":\"App_listSection__2EEd3\",\"MainSection\":\"App_MainSection__30X-g\",\"ListItems\":\"App_ListItems__1EMT9\"};"],"sourceRoot":""}