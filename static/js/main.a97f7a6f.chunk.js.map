{"version":3,"sources":["Alert.module.css","List.jsx","Alert.jsx","App.js","reportWebVitals.js","index.js","App.module.css","List.module.css"],"names":["module","exports","List","item","className","ListStyle","article","p","span","Button","variant","Alert","type","message","removeNotification","list","useEffect","timeout","setTimeout","clearTimeout","AlertStyle","getLocalStorage","localStorage","getItem","JSON","parse","App","useState","itemEdit","buttonType","addToList","show","notification","notificationSetter","clickHandler","e","preventDefault","showNotification","newItem","id","Date","getTime","toString","setItem","stringify","AppStyles","Background","listSection","header","MainSection","onSubmit","placeholder","value","onChange","text","target","as","onClick","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a97f7a6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Alert_p__IPI4F\"};","import ListStyle from \"./List.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\n\r\nconst List = ({ item }) => {\r\n  return (\r\n    <>\r\n      <div className={ListStyle.article}>\r\n        <p className={ListStyle.p}>\r\n          <span className={ListStyle.span}> {item}</span>\r\n          <span className=\"ButtonSection\">\r\n            <Button variant=\"outline-dark\">\r\n              <AiFillEdit />\r\n            </Button>\r\n            <Button variant=\"outline-dark\">\r\n              <MdDeleteForever />\r\n            </Button>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import AlertStyle from \"./Alert.module.css\";\r\n\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst Alert = ({ type, message, removeNotification, list }) => {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => removeNotification(), 3000);\r\n    return () => clearTimeout(timeout);\r\n  }, [list]);\r\n  return <p className={`${AlertStyle.p} ${AlertStyle}.${type}}`}>{message}</p>;\r\n};\r\n\r\nexport default Alert;\r\n","// import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport AppStyles from \"./App.module.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\nimport { MdAirlineSeatLegroomExtra } from \"react-icons/md\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem(\"list\")));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [item, itemEdit] = useState(\"\");\n  const [id, idSetter] = useState(0);\n  const [buttonType, buttonTypehandler] = useState(\"submit\");\n  const [list, addToList] = useState(getLocalStorage);\n  const [editingItemsID, editItem] = useState(null);\n  const [notification, notificationSetter] = useState({\n    show: false,\n    type: \"\",\n    message: \"\",\n  });\n\n  const clickHandler = (e) => {\n    e.preventDefault();\n\n    if (item) {\n      showNotification(true, \"success\", \"item added to the list\");\n      const newItem = {\n        id: new Date().getTime().toString(),\n        item: item,\n      };\n      addToList([...list, newItem]);\n      itemEdit(\"\");\n    }\n  };\n\n  const showNotification = (show = false, type = \"\", message = \"\") => {\n    notificationSetter({ show, type, message });\n  };\n\n  const clearAllButtonHandler = () => {\n    showNotification(true, \"success\", \"List Cleared\");\n    addToList([]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n  return (\n    <div className={AppStyles.Background}>\n      <div className={AppStyles.listSection}>\n        <header className={AppStyles.header}>Grocery Bud</header>\n        {notification.show && (\n          <Alert\n            key=\"Alert-section\"\n            {...notification}\n            removeNotification={showNotification}\n            list={list}\n          />\n        )}\n        <span className=\"AppStyles\"></span>\n        <form className={AppStyles.MainSection} onSubmit={clickHandler}>\n          <input\n            type=\"text\"\n            className=\"text\"\n            placeholder=\"Add an item...\"\n            value={item}\n            onChange={(text) => itemEdit(text.target.value)}\n          />\n          <Button\n            as=\"input\"\n            type=\"submit\"\n            value={buttonType}\n            onClick={clickHandler}\n          />\n        </form>\n        {list.length > 0 && (\n          <div className=\"AppStyles.ListItems\">\n            {list.map((item) => (\n              <List item={item.item} key={item.id} />\n            ))}\n\n            <Button\n              type=\"outilne-submit\"\n              variant=\"outline-dark\"\n              onClick={clearAllButtonHandler}\n            >\n              Clear All\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"App_Background__1O11a\",\"header\":\"App_header__3r_-t\",\"listSection\":\"App_listSection__2EEd3\",\"MainSection\":\"App_MainSection__30X-g\",\"ListItems\":\"App_ListItems__1EMT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"List_p__1phPA\"};"],"sourceRoot":""}